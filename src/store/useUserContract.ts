import {
  addDoc,
  arrayUnion,
  collection,
  doc,
  serverTimestamp,
  updateDoc,
} from 'firebase/firestore';
import { getDownloadURL, ref, uploadBytes } from 'firebase/storage';
import { create } from 'zustand';
//@ts-ignore
import { db, storage } from '../firebase.js';
const useUserContract = create<UserContractStore>((set, get) => ({
  contract: {
    baseContractID: '',
    baseContractStartDate: '',
    baseContractTitle: '',
    baseContractType: '',
    contractHTML: '',
    contractId: '',
    contracteeCnic: '',
    contracteeDate: '',
    contracteeEmail: '',
    contracteeMembershipID: '',
    contracteeName: '',
    contracteePhoneNo: '',
    contracteeUid: '',
    contractorAmount: 0,
    contractorCnic: '',
    contractorDate: '',
    contractorDuration: 0,
    contractorEmail: '',
    contractorName: '',
    contractorPhoneNo: '',
    contractorUid: '',
    id: '',
    questions: [{ answer: '', question: '' }],
    installments: [],
  },

  resetContract() {
    set((state) => ({
      ...state,
      contract: {
        baseContractID: '',
        baseContractStartDate: '',
        baseContractTitle: '',
        baseContractType: '',
        contractHTML: '',
        contractId: '',
        contracteeCnic: '',
        contracteeDate: '',
        contracteeEmail: '',
        contracteeMembershipID: '',
        contracteeName: '',
        contracteePhoneNo: '',
        contracteeUid: '',
        contractorAmount: 0,
        contractorCnic: '',
        contractorDate: '',
        contractorDuration: 0,
        contractorEmail: '',
        contractorName: '',
        contractorPhoneNo: '',
        contractorUid: '',
        id: '',
        installments: [],
        questions: [{ answer: '', question: '' }],
      },
    }));
  },
  setcontract({
    baseContractID,
    baseContractStartDate,
    baseContractTitle,
    baseContractType,
    contractHTML,
    contractId,
    contracteeCnic,
    contracteeDate,
    contracteeEmail,
    contracteeMembershipID,
    contracteeName,
    contracteePhoneNo,
    contracteeUid,
    contractorAmount,
    contractorCnic,
    contractorDate,
    contractorDuration,
    contractorEmail,
    contractorName,
    contractorPhoneNo,
    contractorUid,
    id,
    questions,
    installments,
  }) {
    set((state) => ({
      ...state,
      contract: {
        baseContractID,
        baseContractStartDate,
        baseContractTitle,
        baseContractType,
        contractHTML,
        contractId,
        contracteeCnic,
        contracteeDate,
        contracteeEmail,
        contracteeMembershipID,
        contracteeName,
        contracteePhoneNo,
        contracteeUid,
        contractorAmount,
        contractorCnic,
        contractorDate,
        contractorDuration,
        contractorEmail,
        contractorName,
        contractorPhoneNo,
        contractorUid,
        id,
        questions,
        installments,
      },
    }));
  },
}));

export default useUserContract;
